name: Publish Docker Image

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  # You can enable the below to build on each PR push for testing,
  # pull_request:
  #   branches:
  #     - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lay3rlabs/poa-middleware

jobs:
  build_amd64:
    name: Build and Push AMD64 Image
    runs-on: linux-8-core
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Pull submodules recursively
        run: git submodule update --init --recursive

      - uses: actions/setup-node@v4
        name: Install Node.js
        with:
          node-version: 21

      - name: Install dependencies
        run: npm install

      - name: Set IMAGE_TAG
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            IMAGE_TAG="${TAG//[^a-zA-Z0-9_.-]/-}"
          elif [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64
          platforms: linux/amd64
          provenance: false

  build_arm64:
    name: Build and Push ARM64 Image
    runs-on: arm64-builder
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Pull submodules recursively
        run: git submodule update --init --recursive

      - uses: actions/setup-node@v4
        name: Install Node.js
        with:
          node-version: 21

      - name: Install dependencies
        run: npm install

      - name: Set IMAGE_TAG
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            IMAGE_TAG="${TAG//[^a-zA-Z0-9_.-]/-}"
          elif [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64
          platforms: linux/arm64
          provenance: false

  create_manifest:
    name: Create and Push Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: [build_amd64, build_arm64]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set IMAGE_TAG
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            IMAGE_TAG="${TAG//[^a-zA-Z0-9_.-]/-}"
          elif [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          export GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$GIT_HASH \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64
